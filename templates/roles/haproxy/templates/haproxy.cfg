frontend haproxy
    bind {{ haproxy_listen_address }}:{{ haproxy_listen_port }}
    mode http
    default_backend dotcms
  {% if haproxy_stats %}
    stats enable
    stats uri /hproxy?stats
    stats realm HAProxy Statistics
    stats auth admin:admin
    balance roundrobin
    option httpclose
    option forwardfor
  {% endif %}


# with a list
{% for backend in haproxy_backends %}
    {{backend}}
{% endfor %}

{% import 'backend.macro.j2' as backend %}


# with a dict
{% for key, value in haproxy_backend.iteritems() %}
    # server {{key}} {{value.ip}}:8080 check
backend(key, value.ip)
{%endfor%}

# we can use filters to join items in a list or map to extract values from a map

# we can use templates and ihheritance to reuse a base block for populating a template